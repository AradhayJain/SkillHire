# This server block handles the initial Certbot challenge over HTTP
# and redirects all other traffic to HTTPS.
server {
    listen 80;
    server_name skillsnap.co.in www.skillsnap.co.in; # <-- IMPORTANT: REPLACE with your domain

    # This location block is used by Certbot for domain validation.
    # Nginx will serve files from this directory when a request comes
    # to /.well-known/acme-challenge/
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # For all other requests on port 80, issue a permanent redirect to HTTPS.
    location / {
        return 301 https://$host$request_uri;
    }
}

# This server block handles all secure traffic over HTTPS.
server {
    listen 443 ssl;
    server_name skillsnap.co.in www.skillsnap.co.in; # <-- IMPORTANT: REPLACE with your domain

    # Tell Nginx where to find the SSL certificate and private key.
    # These paths are inside the container and point to our shared volume.
    ssl_certificate /etc/letsencrypt/live/skillsnap.co.in/fullchain.pem; # <-- REPLACE domain
    ssl_certificate_key /etc/letsencrypt/live/skillsnap.co.in/privkey.pem; # <-- REPLACE domain

    # Include recommended security settings (we will create these files).
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    # Proxy requests for your API to the 'backend' service.
    # All requests starting with /api/ will be forwarded.
    location /api/ {
        # The service name 'backend' is used as the hostname. Docker resolves this.
        proxy_pass http://backend:8000; # <-- Adjust port if your backend uses a different one
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy requests to the 'ml' service.
    # All requests starting with /ml/ will be forwarded.
    location /ml/ {
        proxy_pass http://ml:5000; # <-- Adjust port if your ml service uses a different one
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve the frontend's static files for all other requests.
    location / {
        # This is the default directory where your frontend build assets are.
        root /usr/share/nginx/html;
        # This line is crucial for Single Page Applications (React, Vue, etc.)
        # It tries to find a file, then a directory, and if not found, serves index.html.
        try_files $uri $uri/ /index.html;
    }
}
