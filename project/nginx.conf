# Server block to handle HTTP traffic (for redirection and challenges)
server {
    listen 80;
    server_name skillsnap.co.in www.skillsnap.co.in;

    # This is used by Certbot for the HTTP-01 challenge and renewals.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # For all other traffic, permanently redirect to the secure HTTPS version.
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block to handle all secure HTTPS traffic.
# This contains your original, correct proxy logic.
server {
    listen 443 ssl;
    server_name skillsnap.co.in www.skillsnap.co.in;

    # --- SSL Certificate Configuration ---
    ssl_certificate /etc/letsencrypt/live/skillsnap.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/skillsnap.co.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /usr/share/nginx/html;
    index index.html;

    # --- Frontend Routing ---
    location / {
        try_files $uri $uri/ /index.html;
    }

    # --- Backend API Proxy (YOUR ORIGINAL, CORRECT CONFIG) ---
    location /api/ {
        proxy_pass http://backend:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- ML Service Proxy (YOUR ORIGINAL, CORRECT CONFIG) ---
    location /ml/ {
        proxy_pass http://ml:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- WebSocket Proxy for Socket.IO (YOUR ORIGINAL, CORRECT CONFIG) ---
    location /socket.io/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}

